Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: StatModule path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\environments\ooh\parcelpoint_py.py[0m(32)[0;36m__init__[0;34m()[0m
[0;32m     30 [0;31m                 ):
[0m[0;32m     31 [0;31m[0;34m[0m[0m
[0m[1;31m112[0;32m> 32 [0;31m        [0mself[0m[0;34m.[0m[0maction_space[0m [0;34m=[0m [0mSpace[0m[0;34m([0m[0msize[0m[0;34m=[0m[0;36m2[0m[0;34m**[0m[0mn_parcelpoints[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m        [0mself[0m[0;34m.[0m[0mobservation_space[0m [0;34m=[0m [0mSpace[0m[0;34m([0m[0mlow[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mzeros[0m[0;34m([0m[0;36m2[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m,[0m [0mhigh[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0;36m2[0m[0;34m,[0m [0;36m500[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m[0;34m[0m[0m
[0m
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:9:36', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Environments.OOH.Parcelpoint_py[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\environments\ooh\parcelpoint_py.py[0m(31)[0;36m__init__[0;34m()[0m
[0;32m     29 [0;31m                 ):
[0m[0;32m     30 [0;31m[0;34m[0m[0m
[0m[1;31m111[0;32m> 31 [0;31m        [0mself[0m[0;34m.[0m[0maction_space[0m [0;34m=[0m [0mSpace[0m[0;34m([0m[0msize[0m[0;34m=[0m[0;36m2[0m[0;34m**[0m[0mn_parcelpoints[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m        [0mself[0m[0;34m.[0m[0mobservation_space[0m [0;34m=[0m [0mSpace[0m[0;34m([0m[0mlow[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mzeros[0m[0;34m([0m[0;36m2[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m,[0m [0mhigh[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0;36m2[0m[0;34m,[0m [0;36m500[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m[0;34m[0m[0m
[0m
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1234, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:21:38', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]

Program interrupted. (Use 'cont' to resume).
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Environments.OOH.env_utils, Environments.OOH.customerchoice, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.config, Environments.OOH.Parcelpoint_py[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1234, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:21:47', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.338571548461914
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1234, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:24:43', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.334604263305664
Episode 99 / current actor loss: 0.0
Episode 99 / current critic loss: 0.0
time required for 100 episodes :330.5091543197632
400.9258334636688
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0malse, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.338571548461914
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1234, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:24:43', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.334604263305664
Episode 99 / current actor loss: 0.0
Episode 99 / current critic loss: 0.0
time required for 100 episodes :330.5091543197632
400.9258334636688
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0me=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.338571548461914
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1234, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:24:43', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.334604263305664
Episode 99 / current actor loss: 0.0
Episode 99 / current critic loss: 0.0
time required for 100 episodes :330.5091543197632
400.9258334636688
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.338571548461914
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1234, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:24:43', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.334604263305664
Episode 99 / current actor loss: 0.0
Episode 99 / current critic loss: 0.0
time required for 100 episodes :330.5091543197632
400.9258334636688ig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0mRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Environments.OOH.Parcelpoint_py[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Environments.OOH.Parcelpoint_py[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0mn_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Environments.OOH.Parcelpoint_py[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:4:48', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
*** AttributeError: 'Parcelpoint_py' object has no attribute 'path'
*** NameError: name 'path' is not defined
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Environments.OOH.Parcelpoint_py[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\environments\ooh\parcelpoint_py.py[0m(31)[0;36m__init__[0;34m()[0m
[0;32m     29 [0;31m                 ):
[0m[0;32m     30 [0;31m[0;34m[0m[0m
[0m[1;31m112[0;32m> 31 [0;31m        [0mself[0m[0;34m.[0m[0maction_space[0m [0;34m=[0m [0mSpace[0m[0;34m([0m[0msize[0m[0;34m=[0m[0;36m2[0m[0;34m**[0m[0mn_parcelpoints[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m        [0mself[0m[0;34m.[0m[0mobservation_space[0m [0;34m=[0m [0mSpace[0m[0;34m([0m[0mlow[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mzeros[0m[0;34m([0m[0;36m2[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m,[0m [0mhigh[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0;36m2[0m[0;34m,[0m [0;36m500[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m[0;34m[0m[0m
[0m
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Environments.OOH.customerchoice, Src.config, Environments.OOH.env_utils, Environments.OOH.Parcelpoint_py[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\environments\ooh\parcelpoint_py.py[0m(32)[0;36m__init__[0;34m()[0m
[0;32m     30 [0;31m                 ):
[0m[0;32m     31 [0;31m[0;34m[0m[0m
[0m[1;31m112[0;32m> 32 [0;31m        [0mself[0m[0;34m.[0m[0maction_space[0m [0;34m=[0m [0mSpace[0m[0;34m([0m[0msize[0m[0;34m=[0m[0;36m2[0m[0;34m**[0m[0mn_parcelpoints[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m        [0mself[0m[0;34m.[0m[0mobservation_space[0m [0;34m=[0m [0mSpace[0m[0;34m([0m[0mlow[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mzeros[0m[0;34m([0m[0;36m2[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m,[0m [0mhigh[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0;36m2[0m[0;34m,[0m [0;36m500[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m[0;34m[0m[0m
[0m
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:9:36', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Environments.OOH.Parcelpoint_py[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:4:48', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
*** AttributeError: 'Parcelpoint_py' object has no attribute 'path'
*** NameError: name 'path' is not defined
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Environments.OOH.Parcelpoint_py[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\environments\ooh\parcelpoint_py.py[0m(31)[0;36m__init__[0;34m()[0m
[0;32m     29 [0;31m                 ):
[0m[0;32m     30 [0;31m[0;34m[0m[0m
[0m[1;31m112[0;32m> 31 [0;31m        [0mself[0m[0;34m.[0m[0maction_space[0m [0;34m=[0m [0mSpace[0m[0;34m([0m[0msize[0m[0;34m=[0m[0;36m2[0m[0;34m**[0m[0mn_parcelpoints[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m        [0mself[0m[0;34m.[0m[0mobservation_space[0m [0;34m=[0m [0mSpace[0m[0;34m([0m[0mlow[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mzeros[0m[0;34m([0m[0;36m2[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m,[0m [0mhigh[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0;36m2[0m[0;34m,[0m [0;36m500[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m[0;34m[0m[0m
[0m
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Environments.OOH.customerchoice, Src.config, Environments.OOH.env_utils, Environments.OOH.Parcelpoint_py[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\environments\ooh\parcelpoint_py.py[0m(32)[0;36m__init__[0;34m()[0m
[0;32m     30 [0;31m                 ):
[0m[0;32m     31 [0;31m[0;34m[0m[0m
[0m[1;31m112[0;32m> 32 [0;31m        [0mself[0m[0;34m.[0m[0maction_space[0m [0;34m=[0m [0mSpace[0m[0;34m([0m[0msize[0m[0;34m=[0m[0;36m2[0m[0;34m**[0m[0mn_parcelpoints[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m        [0mself[0m[0;34m.[0m[0mobservation_space[0m [0;34m=[0m [0mSpace[0m[0;34m([0m[0mlow[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mzeros[0m[0;34m([0m[0;36m2[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m,[0m [0mhigh[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0;36m2[0m[0;34m,[0m [0;36m500[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m[0;34m[0m[0m
[0m
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:9:36', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Environments.OOH.Parcelpoint_py[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0mcapacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0my.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0mnments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0my.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0marcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0monments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:4:48', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
*** AttributeError: 'Parcelpoint_py' object has no attribute 'path'
*** NameError: name 'path' is not defined
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Environments.OOH.Parcelpoint_py[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\environments\ooh\parcelpoint_py.py[0m(31)[0;36m__init__[0;34m()[0m
[0;32m     29 [0;31m                 ):
[0m[0;32m     30 [0;31m[0;34m[0m[0m
[0m[1;31m112[0;32m> 31 [0;31m        [0mself[0m[0;34m.[0m[0maction_space[0m [0;34m=[0m [0mSpace[0m[0;34m([0m[0msize[0m[0;34m=[0m[0;36m2[0m[0;34m**[0m[0mn_parcelpoints[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     32 [0;31m        [0mself[0m[0;34m.[0m[0mobservation_space[0m [0;34m=[0m [0mSpace[0m[0;34m([0m[0mlow[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mzeros[0m[0;34m([0m[0;36m2[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m,[0m [0mhigh[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0;36m2[0m[0;34m,[0m [0;36m500[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m[0;34m[0m[0m
[0m
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Environments.OOH.customerchoice, Src.config, Environments.OOH.env_utils, Environments.OOH.Parcelpoint_py[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\environments\ooh\parcelpoint_py.py[0m(32)[0;36m__init__[0;34m()[0m
[0;32m     30 [0;31m                 ):
[0m[0;32m     31 [0;31m[0;34m[0m[0m
[0m[1;31m112[0;32m> 32 [0;31m        [0mself[0m[0;34m.[0m[0maction_space[0m [0;34m=[0m [0mSpace[0m[0;34m([0m[0msize[0m[0;34m=[0m[0;36m2[0m[0;34m**[0m[0mn_parcelpoints[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m        [0mself[0m[0;34m.[0m[0mobservation_space[0m [0;34m=[0m [0mSpace[0m[0;34m([0m[0mlow[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mzeros[0m[0;34m([0m[0;36m2[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m,[0m [0mhigh[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0;36m2[0m[0;34m,[0m [0;36m500[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m[0;34m[0m[0m
[0m
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:9:36', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Environments.OOH.Parcelpoint_py[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0monments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0monments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0monments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0md from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0mnts.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0mdocumenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\environments\ooh\parcelpoint_py.py[0m(32)[0;36m__init__[0;34m()[0m
[0;32m     30 [0;31m                 ):
[0m[0;32m     31 [0;31m[0;34m[0m[0m
[0m[1;31m112[0;32m> 32 [0;31m        [0mself[0m[0;34m.[0m[0maction_space[0m [0;34m=[0m [0mSpace[0m[0;34m([0m[0msize[0m[0;34m=[0m[0;36m2[0m[0;34m**[0m[0mn_parcelpoints[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     33 [0;31m        [0mself[0m[0;34m.[0m[0mobservation_space[0m [0;34m=[0m [0mSpace[0m[0;34m([0m[0mlow[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mzeros[0m[0;34m([0m[0;36m2[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m,[0m [0mhigh[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfull[0m[0;34m([0m[0;36m2[0m[0;34m,[0m [0;36m500[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m     34 [0;31m[0;34m[0m[0m
[0m
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:9:36', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Environments.OOH.Parcelpoint_py[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>
Module path:  Src.Algorithms.Heuristic Heuristic
Dynamically loaded from:  <class 'Src.Algorithms.Heuristic.Heuristic'>
=====Configurations=====
 Namespace(seed=1, save_count=1000, optim='sgd', log_output='term_file', debug=True, save_model=True, timestamp='6|2|15:12:31', folder_suffix='default', experiment='run', algo_name='Heuristic', env_name='Parcelpoint_py', n_actions=6, max_episodes=100, max_steps=150, pricing=True, max_price=5.0, min_price=-5.0, n_vehicles=2, veh_capacity=20, n_parcelpoints=6, parcelpoint_capacity=25, incentive_sens=0.5, base_util=0.2, home_util=0.3, distance_scaler=10, revenue=40, fuel_cost=0.1, truck_speed=40, del_time=5, driver_wage=25, reopt=50, grid_dim=50, k=1, saveRoutes=False, init_theta=1.0, cool_theta=True, offer_all=False, gamma=0.999, actor_lr=0.01, critic_lr=0.01, state_lr=0.001, gauss_variance=0.5, hiddenLayerSize=32, hiddenActorLayerSize=128, deepActor=False, actor_scaling_factor_mean=1, fourier_coupled=True, fourier_order=3, buffer_size=100, batch_size=1)
Actions space: 64 :: State space: 4
State Low: tensor([0., 0.]) :: State High: tensor([500., 500.])
State features:  [('dummy_param', torch.Size([1]))]
Episode 0 / current actor loss: 0.0
Episode 0 / current critic loss: 0.0
time required for 100 episodes :3.3303637504577637
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Utils.Basis, Src.Utils.Actor, Src.Utils.Critic, Src.Algorithms.Heuristic, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_codebase\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m