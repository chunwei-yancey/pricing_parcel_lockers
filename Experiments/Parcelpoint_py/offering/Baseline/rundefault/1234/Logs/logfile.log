Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:52:31', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=15, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\experiments\plot.py[0m(2)[0;36m<module>[0;34m()[0m
[0;32m      1 [0;31m[0;31m# -*- coding: utf-8 -*-[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m----> 2 [0;31m"""
[0m[0;32m      3 [0;31m[0mCreated[0m [0mon[0m [0mMon[0m [0mJun[0m [0;36m19[0m [0;36m0[0m[0;36m9[0m[0;34m:[0m[0;36m0[0m[0;36m7[0m[0;34m:[0m[0;36m12[0m [0;36m2023[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;34m@[0m[0mauthor[0m[0;34m:[0m [0mAkkermanFR[0m[0;34m[0m[0;34m[0m[0m
[0m
=
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:39:11', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=FaModule path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:42:16', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_code\src\parser.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0margparse[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mfrom[0m [0mdatetime[0m [0;32mimport[0m [0mdatetime[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mclass[0m [0mParser[0m[0;34m([0m[0mobject[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_code\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:42:42', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=17, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 [0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:42:16', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_code\src\parser.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0margparse[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mfrom[0m [0mdatetime[0m [0;32mimport[0m [0mdatetime[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mclass[0m [0mParser[0m[0;34m([0m[0mobject[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_code\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:42:42', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=17, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 ations=====
                                                          Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:39:11', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.315946817398071
0.7983193277310925
time required for 1 episodes :6.324146270751953
0.7983193277310925
18.101642370224
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_code\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:42:16', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_code\src\parser.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0margparse[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mfrom[0m [0mdatetime[0m [0;32mimport[0m [0mdatetime[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mclass[0m [0mParser[0m[0;34m([0m[0mobject[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_code\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:42:42', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=17, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:42:42', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=17, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:49', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=17, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.318499803543091
0.9831932773109243
time required for 1 episodes :6.320657014846802
0.9747899159663865
18.112199068069458
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:44:31', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=15, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.330167055130005
0.9495798319327731
time required for 1 episodes :6.324648141860962
0.9537815126050421
18.114179134368896
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_code\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:44:54', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=15, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:52:31', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=15, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.328345775604248
0.9495798319327731
time required for 1 episodes :6.3252339363098145
0.9537815126050421
18.19800329208374
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline[0m_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:52:31', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=15, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.328345775604248
0.9495798319327731
time required for 1 episodes :6.3252339363098145
0.9537815126050421
18.19800329208374
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline[0me=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:52:31', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=15, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.328345775604248
0.9495798319327731
time required for 1 episodes :6.3252339363098145
0.9537815126050421
18.19800329208374
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline[0mruck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:52:31', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=15, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.328345775604248
0.9495798319327731
time required for 1 episodes :6.3252339363098145
0.9537815126050421
18.19800329208374
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline[0me HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:52:31', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=15, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.328345775604248
0.9495798319327731
time required for 1 episodes :6.3252339363098145
0.9537815126050421
18.19800329208374
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline[0mne=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.parser, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:52:31', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=15, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.328345775604248                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_code\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:42:16', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_code\src\parser.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0margparse[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mfrom[0m [0mdatetime[0m [0;32mimport[0m [0mdatetime[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mclass[0m [0mParser[0m[0;34m([0m[0mobject[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_code\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:42:42', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=17, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 OH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 
[0m[0;32m      2 [0;31m[0;32mfrom[0m [0mdatetime[0m [0;32mimport[0m [0mdatetime[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mclass[0m [0mParser[0m[0;34m([0m[0mobject[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m
> [0;32mc:\onedrive - university of twente\documenten\research\parcelpoint\ooh_code\run.py[0m(1)[0;36m<module>[0;34m()[0m
[0;32m----> 1 [0;31m[0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      2 [0;31m[0;32mimport[0m [0mSrc[0m[0;34m.[0m[0mUtils[0m[0;34m.[0m[0mUtils[0m [0;32mas[0m [0mUtils[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      3 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mparser[0m [0;32mimport[0m [0mParser[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      4 [0;31m[0;32mfrom[0m [0mSrc[0m[0;34m.[0m[0mconfig[0m [0;32mimport[0m [0mConfig[0m[0;34m[0m[0;34m[0m[0m
[0m[0;32m      5 [0;31m[0;32mfrom[0m [0mtime[0m [0;32mimport[0m [0mtime[0m[0;34m[0m[0;34m[0m[0m
[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:42:42', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=17, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 lse, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 tions=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 ations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 ations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 rations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 ations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 rations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 ations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 rations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 ations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 ations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 ions=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 ations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 tions=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 rations=====
 Namespace(seed=1234, save_count=2, log_output='term_file', debug=True, save_model=True, timestamp='6|30|13:43:3', folder_suffix='default', experiment='run', algo_name='Baseline', gpu=1, env_name='Parcelpoint_py', max_episodes=2, max_steps_r=700, max_steps_p=0.5, load_data=True, city='Austin', data_seed=0, pricing=False, max_price=3.0, min_price=-3.0, k=19, n_vehicles=2, veh_capacity=60, parcelpoint_capacity=100000, incentive_sens=-0.25, base_util=-2.0, home_util=3.55, revenue=90, fuel_cost=0.05, truck_speed=50, del_time=2.0, driver_wage=8, reopt=10000000, hgs_reopt_time=2.1, hgs_final_time=6.3, grid_dim=10, n_input_layers=3, only_phase_one=False, initial_phase_epochs=11, buffer_size=100000, batch_size=8, learning_rate=0.001, init_theta_cnn=1.0, cool_theta_cnn=0.0014285714285714286, optim='adam', use3d_conv=False, n_filters=16, dropout=0.1, init_theta=1.0, cool_theta=0.0014285714285714286, save_routes=False, price_pp=-0.0, price_home=0.0)
Actions space: 1048576 :: State space: 4
time required for 1 episodes :6.340819835662842
1.0
time required for 1 episodes :6.3297083377838135
0.9915966386554622
18.104711771011353
[4;33mReloaded modules[24m: Src.Utils, Environments, Environments.OOH, Environments.OOH.containers, Src.Utils.Utils, Src.config, Environments.OOH.env_utils, Environments.OOH.customerchoice, Environments.OOH.Parcelpoint_py, Src.Algorithms.Agent, Src.Algorithms.Baseline, Src.parser[0m
Module path:  Environments.OOH.Parcelpoint_py Parcelpoint_py
Dynamically loaded from:  <class 'Environments.OOH.Parcelpoint_py.Parcelpoint_py'>

 Note: the HGS python implementation (hygese 0.0.0.8) throws an assertion error for coords<0, you will need to outcomment this check in hygese.py 

Module path:  Src.Algorithms.Baseline Baseline
Dynamically loaded from:  <class 'Src.Algorithms.Baseline.Baseline'>
Number of GPUs available:  1
=====Configurations=====
 